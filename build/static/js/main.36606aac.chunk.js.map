{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showResults","base_url","request","get","set","then","res","setState","resultsApi","body","result","catch","err","console","log","verifyProgress","percentage","parseInt","advanced","finished_at","timer","loading","slice","clearInterval","completed","handleselectedBigFile","event","bigFile","target","files","loaded","handleselectedLittleFile","littleFile","handleUpload","post","attach","state","concat","id","setInterval","react_default","a","createElement","className","style","textAlign","Grid_default","container","spacing","justify","alignItems","item","xs","accept","type","display","onChange","htmlFor","Button_default","variant","component","disabled","CircularProgress_default","size","color","name","onClick","marginRight","Send_default","LinearProgress_default","value","TextField_default","label","results","start_second","margin","end_second","alt","src","distances_overlapping_img","best_adjust_overlapping_img","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36606aac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport request from 'superagent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Send from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tresultsApi: null,\n\t\t\tbigFile: null,\n\t\t\tlittleFile: null,\n\t\t\tloading: false,\n\t\t\tcompleted: 0\n\t\t};\n\t}\n\n\tshowResults = (base_url) => {\n\t\trequest\n\t\t.get(base_url)\n\t\t.set('Accept', 'application/json')\n\t\t.then(res => {\n\t\tthis.setState({\n\t\t\tresultsApi: res.body.result\n\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\tverifyProgress = (base_url) => {\n\t\trequest\n\t\t.get(base_url)\n\t\t.set('Accept', 'application/json')\n\t\t.then(res => {\n\t\t\tvar percentage = parseInt(res.body.result.advanced[0]);\n\t\t\tif (res.body.result.finished_at) {\n\t\t\t\tconsole.log(this.timer, \"DSADSADADAD\")\n\t\t\t\tthis.setState({loading: false});\n\t\t\t\tbase_url = base_url.slice(0,-1) + \"1\";\n\t\t\t\tthis.showResults(base_url);\n\t\t\t\tclearInterval(this.timer);\n\t\t\t}\n\t\tthis.setState({\n\t\t\tcompleted: percentage\n\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\thandleselectedBigFile = event => {\n\t\tthis.setState({\n\t\t\tbigFile: event.target.files[0],\n\t\t  loaded: 0,\n\t\t})\n\t}\n\n\thandleselectedLittleFile = event => {\n\t\tthis.setState({\n\t\t\tlittleFile: event.target.files[0],\n\t\t  loaded: 0,\n\t\t})\n\t}\n\n\thandleUpload = () => {\n\t\tvar base_url = \"https://audio-records-app.herokuapp.com/\"\n\t\trequest\n\t\t.post('https://audio-records-app.herokuapp.com/collection')\n\t\t.attach('big_file', this.state.bigFile)\n\t\t.attach('little_file', this.state.littleFile)\n\t\t.then(res => {\n\t\t\tbase_url = base_url.concat(res.body.id, \"?with_files=0\");\n\t\t\tthis.timer = setInterval(this.verifyProgress, 500, base_url);\n      this.setState({loading: true});\n      return;\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\" style={{textAlign: \"center\"}}>\n\t\t\t\t<Grid container spacing={24}\n\t\t\t\t  \tjustify=\"center\"\n\t\t\t\t  \talignItems=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\taccept=\"audio/*\"\n\t\t\t\t\t\t\tid=\"contained-big-file\"\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tstyle={{display: 'none' }}\n\t\t\t\t\t\t\tonChange={this.handleselectedBigFile}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"contained-big-file\">\n\t\t\t\t\t\t\t<Button variant=\"contained\" component=\"span\" disabled={this.state.loading}>\n\t\t\t\t\t\t\t\tUpload Big File\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{this.state.loading && <CircularProgress size={24} color=\"secondary\"/>}\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t{this.state.bigFile ? this.state.bigFile.name: \"No file selected\"}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\taccept=\"audio/*\"\n\t\t\t\t\t\t\tid=\"contained-little-file\"\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tstyle={{display: 'none' }}\n\t\t\t\t\t\t\tonChange={this.handleselectedLittleFile}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"contained-little-file\">\n\t\t\t\t\t\t\t<Button variant=\"contained\" component=\"span\" disabled={this.state.loading}>\n\t\t\t\t\t\t\t\tUpload Little File\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{this.state.loading && <CircularProgress size={24} color=\"secondary\"/>}\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t{this.state.littleFile ? this.state.littleFile.name: \"No file selected\"}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.handleUpload} disabled={this.state.loading} style={{marginRight: \"30px\"}}>\n\t\t\t\t\t\tSend\n        \t\t\t\t<Send />\n      \t\t\t\t</Button>\n\t\t\t\t\t{this.state.loading && <CircularProgress size={24} color=\"secondary\"/>}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{this.state.loading && <LinearProgress variant=\"determinate\" value={this.state.completed} />}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t{this.state.resultsApi &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Grid container spacing={24}\n\t\t\t\t  \t\t\tjustify=\"center\"\n\t\t\t\t  \t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"standard-name\"\n\t\t\t\t\t\t\t\tlabel=\"Time start of best precision\"\n\t\t\t\t\t\t\t\tvalue={this.state.resultsApi ? this.state.resultsApi.results.start_second: \"\"}\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"standard-name\"\n\t\t\t\t\t\t\t\t\tlabel=\"Time start of best precision\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.resultsApi ? this.state.resultsApi.results.end_second: \"\"}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<img alt=\"\" src={this.state.resultsApi.results.distances_overlapping_img} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<img alt=\"\" src={this.state.resultsApi.results.best_adjust_overlapping_img} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}